function reciposszeg(A,B)
    return 1/(1/A+1/B)
end
R={} U={} I={}

-- A -> mindenhol az áram iránya
--[[
        +---------(<-If=2A)-----------------+
        |                                   |
        +--(R2=10->)---+---(<-R1=5)---------+
        |              |                    |
        |              +(<-Ug=2V)+          |
        |                        |          |
        +------(R4=15->)---------+-(R3=20->)+
        
--]]

R[1]=5
R[2]=10
R[3]=20
R[4]=15
If=2
Ug=2

--Szuper pozíció

function szakadas()
    local U, I = {},{}
    --[[
            +--(R2=10->)---+---(<-R1=5)---------+
            |              |                    |
            |              +(<-Ug=2V)+          |
            |                        |          |
            +------(R4=15->)---------+-(R3=20->)+
            
    --]]
    
    
    R["31"]=R[3]+R[1]
    R["42"]=R[4]+R[2]
    R["4231"]=reciposszeg(R["42"],R["31"])
    
    --R=U/I
    U["4231"]=Ug
    I["4231"]=U["4231"]/R["4231"]
    
        U["42"]=U["4231"]
        I["42"]=U["42"]/R["42"]
    
            I[4]=I["42"]
            U[4]=I[4]*R[4]
    
            I[2]=I["42"]
            U[2]=I[2]*R[2]
    
        U["31"]=U["4231"]
        I["31"]=U["31"]/R["31"]
    
            I[3]=I["31"]
            U[3]=I[3]*R[3]
    
            I[1]=I["31"]
            U[1]=I[1]*R[1]
    
    for i=1,4 do
        print("R["..i.."]="..R[i],"I["..i.."]="..I[i],"U["..i.."]="..U[i])
    end
    print("")
    
    --[[
        R[1]=5  I[1]=0.08   U[1]=0.4
        R[2]=10 I[2]=0.08   U[2]=0.8
        R[3]=20 I[3]=0.08   U[3]=1.6
        R[4]=15 I[4]=0.08   U[4]=1.2
    ]]
    return U,I
end


function rovidzar()
    local U, I = {},{}
    --[[
            +---------(<-If=2A)-----------------+
            |                                   |
       C[1] +--(R2=10->)---+---(<-R1=5)---------+ C[2]
            |              |                    |
            |         C[3] +---------+          |
            |                        |          |
            +------(R4=15->)---------+-(R3=20->)+
        
    --]]
    
    --Csomópont módszer: (Befolyó a negatív)
    
    --[[
        -2 + (C[1]-C[3])/R[2] + (C[1]-C[3])/R[4] = 0,
        2 + (C[2]-C[3])/R[1] - (C[3]-C[2])/R[3] = 0,
        C[3] = 0
    
        2 + C[1]/10 + C[1]/15 = 0,
        -2 + C[2]/5 + C[2]/20 = 0
    
        C[1]=12
        C[2]=-8
        C[3]=0

        Ell:

        -(C[1]-C[3])/R[2] - (C[2]-C[3])/R[1] + (C[3]-C[2])/R[3] - (C[1]-C[3])/R[4] = 0
    ]]
    
    C = {12,-8,0}
    
    U[1]=C[2]-C[3]
    U[2]=C[1]-C[3]
    U[3]=C[3]-C[2]
    U[4]=C[1]-C[3]

    I[1]=U[1]/R[1]
    I[2]=U[2]/R[2]
    I[3]=U[3]/R[3]
    I[4]=U[4]/R[4]


    for i=1,4 do
        print("R["..i.."]="..R[i],"I["..i.."]="..I[i],"U["..i.."]="..U[i])
    end
    print("")

    --[[
        R[1]=5  I[1]=1.6    U[1]=8
        R[2]=10 I[2]=-1.2   U[2]=-12
        R[3]=20 I[3]=-0.4   U[3]=-8
        R[4]=15 I[4]=-0.8   U[4]=-12
    ]]
    
    return U,I
end

sU,sI = szakadas()
rU,rI  = rovidzar()

U[1], I[1] = (rU[1] or 0)-(sU[1] or 0),  (rI[1] or 0)-(sI[1] or 0)
U[2], I[2] = (rU[2] or 0)-(sU[2] or 0),  (rI[2] or 0)-(sI[2] or 0)
U[3], I[3] = (rU[3] or 0)-(sU[3] or 0),  (rI[3] or 0)-(sI[3] or 0) 
U[4], I[4] = (rU[4] or 0)+(sU[4] or 0),  (rI[4] or 0)-(sI[4] or 0) --Egy irányba megy át rajta a 2 gen.


for i=1,4 do
    print("R["..i.."]="..R[i],"I["..i.."]="..I[i],"U["..i.."]="..U[i])
end

--[[ 
        R[1]=5  I[1]=-1.68  U[1]=-8.4
        R[2]=10 I[2]=1.12   U[2]=11.2
        R[3]=20 I[3]=0.32   U[3]=6.4
        R[4]=15 I[4]=0.72   U[4]=13.2
]]



